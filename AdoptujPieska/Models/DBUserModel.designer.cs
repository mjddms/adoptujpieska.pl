#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdoptujPieska.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DBUserModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    partial void InsertPieski(Pieski instance);
    partial void UpdatePieski(Pieski instance);
    partial void DeletePieski(Pieski instance);
    partial void InsertLike(Like instance);
    partial void UpdateLike(Like instance);
    partial void DeleteLike(Like instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPhotosBlog(PhotosBlog instance);
    partial void UpdatePhotosBlog(PhotosBlog instance);
    partial void DeletePhotosBlog(PhotosBlog instance);
    partial void InsertBlog(Blog instance);
    partial void UpdateBlog(Blog instance);
    partial void DeleteBlog(Blog instance);
    partial void InsertComments(Comments instance);
    partial void UpdateComments(Comments instance);
    partial void DeleteComments(Comments instance);
    partial void InsertFormSchel(FormSchel instance);
    partial void UpdateFormSchel(FormSchel instance);
    partial void DeleteFormSchel(FormSchel instance);
    #endregion
		
		public DBUserModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBUserModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBUserModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBUserModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Photo> Photo
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
		
		public System.Data.Linq.Table<Pieski> Pieski
		{
			get
			{
				return this.GetTable<Pieski>();
			}
		}
		
		public System.Data.Linq.Table<Like> Like
		{
			get
			{
				return this.GetTable<Like>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<PhotosBlog> PhotosBlog
		{
			get
			{
				return this.GetTable<PhotosBlog>();
			}
		}
		
		public System.Data.Linq.Table<Blog> Blog
		{
			get
			{
				return this.GetTable<Blog>();
			}
		}
		
		public System.Data.Linq.Table<Comments> Comments
		{
			get
			{
				return this.GetTable<Comments>();
			}
		}
		
		public System.Data.Linq.Table<FormSchel> FormSchel
		{
			get
			{
				return this.GetTable<FormSchel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photo")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Photos;
		
		private int _IdDog;
		
		private EntityRef<Pieski> _Pieski;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhotosChanging(string value);
    partial void OnPhotosChanged();
    partial void OnIdDogChanging(int value);
    partial void OnIdDogChanged();
    #endregion
		
		public Photo()
		{
			this._Pieski = default(EntityRef<Pieski>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photos", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Photos
		{
			get
			{
				return this._Photos;
			}
			set
			{
				if ((this._Photos != value))
				{
					this.OnPhotosChanging(value);
					this.SendPropertyChanging();
					this._Photos = value;
					this.SendPropertyChanged("Photos");
					this.OnPhotosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDog", DbType="Int NOT NULL")]
		public int IdDog
		{
			get
			{
				return this._IdDog;
			}
			set
			{
				if ((this._IdDog != value))
				{
					if (this._Pieski.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDogChanging(value);
					this.SendPropertyChanging();
					this._IdDog = value;
					this.SendPropertyChanged("IdDog");
					this.OnIdDogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pieski_Photo", Storage="_Pieski", ThisKey="IdDog", OtherKey="Id", IsForeignKey=true)]
		public Pieski Pieski
		{
			get
			{
				return this._Pieski.Entity;
			}
			set
			{
				Pieski previousValue = this._Pieski.Entity;
				if (((previousValue != value) 
							|| (this._Pieski.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pieski.Entity = null;
						previousValue.Photo.Remove(this);
					}
					this._Pieski.Entity = value;
					if ((value != null))
					{
						value.Photo.Add(this);
						this._IdDog = value.Id;
					}
					else
					{
						this._IdDog = default(int);
					}
					this.SendPropertyChanged("Pieski");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pieski")]
	public partial class Pieski : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Rasa;
		
		private string _Imie;
		
		private System.Nullable<int> _Wiek;
		
		private System.Nullable<bool> _Plec;
		
		private string _Zdjecie;
		
		private System.Nullable<bool> _Aktywny;
		
		private System.Nullable<bool> _Lubi_dzieci;
		
		private System.Nullable<bool> _Lubi_psy;
		
		private string _Opis;
		
		private System.Nullable<int> _IdUser;
		
		private EntitySet<Photo> _Photo;
		
		private EntitySet<Like> _Like;
		
		private EntitySet<FormSchel> _FormSchel;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRasaChanging(string value);
    partial void OnRasaChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnWiekChanging(System.Nullable<int> value);
    partial void OnWiekChanged();
    partial void OnPlecChanging(System.Nullable<bool> value);
    partial void OnPlecChanged();
    partial void OnZdjecieChanging(string value);
    partial void OnZdjecieChanged();
    partial void OnAktywnyChanging(System.Nullable<bool> value);
    partial void OnAktywnyChanged();
    partial void OnLubi_dzieciChanging(System.Nullable<bool> value);
    partial void OnLubi_dzieciChanged();
    partial void OnLubi_psyChanging(System.Nullable<bool> value);
    partial void OnLubi_psyChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnIdUserChanging(System.Nullable<int> value);
    partial void OnIdUserChanged();
    #endregion
		
		public Pieski()
		{
			this._Photo = new EntitySet<Photo>(new Action<Photo>(this.attach_Photo), new Action<Photo>(this.detach_Photo));
			this._Like = new EntitySet<Like>(new Action<Like>(this.attach_Like), new Action<Like>(this.detach_Like));
			this._FormSchel = new EntitySet<FormSchel>(new Action<FormSchel>(this.attach_FormSchel), new Action<FormSchel>(this.detach_FormSchel));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rasa", DbType="VarChar(50)")]
		public string Rasa
		{
			get
			{
				return this._Rasa;
			}
			set
			{
				if ((this._Rasa != value))
				{
					this.OnRasaChanging(value);
					this.SendPropertyChanging();
					this._Rasa = value;
					this.SendPropertyChanged("Rasa");
					this.OnRasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="VarChar(50)")]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wiek", DbType="Int")]
		public System.Nullable<int> Wiek
		{
			get
			{
				return this._Wiek;
			}
			set
			{
				if ((this._Wiek != value))
				{
					this.OnWiekChanging(value);
					this.SendPropertyChanging();
					this._Wiek = value;
					this.SendPropertyChanged("Wiek");
					this.OnWiekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plec", DbType="Bit")]
		public System.Nullable<bool> Plec
		{
			get
			{
				return this._Plec;
			}
			set
			{
				if ((this._Plec != value))
				{
					this.OnPlecChanging(value);
					this.SendPropertyChanging();
					this._Plec = value;
					this.SendPropertyChanged("Plec");
					this.OnPlecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zdjecie", DbType="NVarChar(MAX)")]
		public string Zdjecie
		{
			get
			{
				return this._Zdjecie;
			}
			set
			{
				if ((this._Zdjecie != value))
				{
					this.OnZdjecieChanging(value);
					this.SendPropertyChanging();
					this._Zdjecie = value;
					this.SendPropertyChanged("Zdjecie");
					this.OnZdjecieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aktywny", DbType="Bit")]
		public System.Nullable<bool> Aktywny
		{
			get
			{
				return this._Aktywny;
			}
			set
			{
				if ((this._Aktywny != value))
				{
					this.OnAktywnyChanging(value);
					this.SendPropertyChanging();
					this._Aktywny = value;
					this.SendPropertyChanged("Aktywny");
					this.OnAktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Lubi dzieci]", Storage="_Lubi_dzieci", DbType="Bit")]
		public System.Nullable<bool> Lubi_dzieci
		{
			get
			{
				return this._Lubi_dzieci;
			}
			set
			{
				if ((this._Lubi_dzieci != value))
				{
					this.OnLubi_dzieciChanging(value);
					this.SendPropertyChanging();
					this._Lubi_dzieci = value;
					this.SendPropertyChanged("Lubi_dzieci");
					this.OnLubi_dzieciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Lubi psy]", Storage="_Lubi_psy", DbType="Bit")]
		public System.Nullable<bool> Lubi_psy
		{
			get
			{
				return this._Lubi_psy;
			}
			set
			{
				if ((this._Lubi_psy != value))
				{
					this.OnLubi_psyChanging(value);
					this.SendPropertyChanging();
					this._Lubi_psy = value;
					this.SendPropertyChanged("Lubi_psy");
					this.OnLubi_psyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int")]
		public System.Nullable<int> IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pieski_Photo", Storage="_Photo", ThisKey="Id", OtherKey="IdDog")]
		public EntitySet<Photo> Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				this._Photo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pieski_Like", Storage="_Like", ThisKey="Id", OtherKey="LikeDog")]
		public EntitySet<Like> Like
		{
			get
			{
				return this._Like;
			}
			set
			{
				this._Like.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pieski_FormSchel", Storage="_FormSchel", ThisKey="Id", OtherKey="idDog")]
		public EntitySet<FormSchel> FormSchel
		{
			get
			{
				return this._FormSchel;
			}
			set
			{
				this._FormSchel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Pieski", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Pieski.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Pieski.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Photo(Photo entity)
		{
			this.SendPropertyChanging();
			entity.Pieski = this;
		}
		
		private void detach_Photo(Photo entity)
		{
			this.SendPropertyChanging();
			entity.Pieski = null;
		}
		
		private void attach_Like(Like entity)
		{
			this.SendPropertyChanging();
			entity.Pieski = this;
		}
		
		private void detach_Like(Like entity)
		{
			this.SendPropertyChanging();
			entity.Pieski = null;
		}
		
		private void attach_FormSchel(FormSchel entity)
		{
			this.SendPropertyChanging();
			entity.Pieski = this;
		}
		
		private void detach_FormSchel(FormSchel entity)
		{
			this.SendPropertyChanging();
			entity.Pieski = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Like]")]
	public partial class Like : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private int _LikeDog;
		
		private EntityRef<Pieski> _Pieski;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnLikeDogChanging(int value);
    partial void OnLikeDogChanged();
    #endregion
		
		public Like()
		{
			this._Pieski = default(EntityRef<Pieski>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeDog", DbType="Int NOT NULL")]
		public int LikeDog
		{
			get
			{
				return this._LikeDog;
			}
			set
			{
				if ((this._LikeDog != value))
				{
					if (this._Pieski.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLikeDogChanging(value);
					this.SendPropertyChanging();
					this._LikeDog = value;
					this.SendPropertyChanged("LikeDog");
					this.OnLikeDogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pieski_Like", Storage="_Pieski", ThisKey="LikeDog", OtherKey="Id", IsForeignKey=true)]
		public Pieski Pieski
		{
			get
			{
				return this._Pieski.Entity;
			}
			set
			{
				Pieski previousValue = this._Pieski.Entity;
				if (((previousValue != value) 
							|| (this._Pieski.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pieski.Entity = null;
						previousValue.Like.Remove(this);
					}
					this._Pieski.Entity = value;
					if ((value != null))
					{
						value.Like.Add(this);
						this._LikeDog = value.Id;
					}
					else
					{
						this._LikeDog = default(int);
					}
					this.SendPropertyChanged("Pieski");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Like", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Like.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Like.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _USERNAME;
		
		private string _EMAIL;
		
		private string _PASSWORD;
		
		private System.Nullable<int> _ROLE;
		
		private string _PHOTO;
		
		private string _PHONE;
		
		private string _ADDRESS;
		
		private string _DESCRIPTION;
		
		private EntitySet<Pieski> _Pieski;
		
		private EntitySet<Like> _Like;
		
		private EntitySet<Blog> _Blog;
		
		private EntitySet<Comments> _Comments;
		
		private EntitySet<FormSchel> _FormSchel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnROLEChanging(System.Nullable<int> value);
    partial void OnROLEChanged();
    partial void OnPHOTOChanging(string value);
    partial void OnPHOTOChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    #endregion
		
		public User()
		{
			this._Pieski = new EntitySet<Pieski>(new Action<Pieski>(this.attach_Pieski), new Action<Pieski>(this.detach_Pieski));
			this._Like = new EntitySet<Like>(new Action<Like>(this.attach_Like), new Action<Like>(this.detach_Like));
			this._Blog = new EntitySet<Blog>(new Action<Blog>(this.attach_Blog), new Action<Blog>(this.detach_Blog));
			this._Comments = new EntitySet<Comments>(new Action<Comments>(this.attach_Comments), new Action<Comments>(this.detach_Comments));
			this._FormSchel = new EntitySet<FormSchel>(new Action<FormSchel>(this.attach_FormSchel), new Action<FormSchel>(this.detach_FormSchel));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(50)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(50)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE", DbType="Int")]
		public System.Nullable<int> ROLE
		{
			get
			{
				return this._ROLE;
			}
			set
			{
				if ((this._ROLE != value))
				{
					this.OnROLEChanging(value);
					this.SendPropertyChanging();
					this._ROLE = value;
					this.SendPropertyChanged("ROLE");
					this.OnROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHOTO", DbType="NVarChar(MAX)")]
		public string PHOTO
		{
			get
			{
				return this._PHOTO;
			}
			set
			{
				if ((this._PHOTO != value))
				{
					this.OnPHOTOChanging(value);
					this.SendPropertyChanging();
					this._PHOTO = value;
					this.SendPropertyChanged("PHOTO");
					this.OnPHOTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(50)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(50)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(MAX)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Pieski", Storage="_Pieski", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Pieski> Pieski
		{
			get
			{
				return this._Pieski;
			}
			set
			{
				this._Pieski.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Like", Storage="_Like", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Like> Like
		{
			get
			{
				return this._Like;
			}
			set
			{
				this._Like.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Blog", Storage="_Blog", ThisKey="Id", OtherKey="author")]
		public EntitySet<Blog> Blog
		{
			get
			{
				return this._Blog;
			}
			set
			{
				this._Blog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comments", Storage="_Comments", ThisKey="Id", OtherKey="author")]
		public EntitySet<Comments> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FormSchel", Storage="_FormSchel", ThisKey="Id", OtherKey="idUser")]
		public EntitySet<FormSchel> FormSchel
		{
			get
			{
				return this._FormSchel;
			}
			set
			{
				this._FormSchel.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pieski(Pieski entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Pieski(Pieski entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Like(Like entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Like(Like entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Blog(Blog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Blog(Blog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments(Comments entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comments entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FormSchel(FormSchel entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FormSchel(FormSchel entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhotosBlog")]
	public partial class PhotosBlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PhotosPost;
		
		private System.Nullable<int> _IdPost;
		
		private EntityRef<Blog> _Blog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhotosPostChanging(string value);
    partial void OnPhotosPostChanged();
    partial void OnIdPostChanging(System.Nullable<int> value);
    partial void OnIdPostChanged();
    #endregion
		
		public PhotosBlog()
		{
			this._Blog = default(EntityRef<Blog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotosPost", DbType="NVarChar(MAX)")]
		public string PhotosPost
		{
			get
			{
				return this._PhotosPost;
			}
			set
			{
				if ((this._PhotosPost != value))
				{
					this.OnPhotosPostChanging(value);
					this.SendPropertyChanging();
					this._PhotosPost = value;
					this.SendPropertyChanged("PhotosPost");
					this.OnPhotosPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPost", DbType="Int")]
		public System.Nullable<int> IdPost
		{
			get
			{
				return this._IdPost;
			}
			set
			{
				if ((this._IdPost != value))
				{
					if (this._Blog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPostChanging(value);
					this.SendPropertyChanging();
					this._IdPost = value;
					this.SendPropertyChanged("IdPost");
					this.OnIdPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_PhotosBlog", Storage="_Blog", ThisKey="IdPost", OtherKey="Id", IsForeignKey=true)]
		public Blog Blog
		{
			get
			{
				return this._Blog.Entity;
			}
			set
			{
				Blog previousValue = this._Blog.Entity;
				if (((previousValue != value) 
							|| (this._Blog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog.Entity = null;
						previousValue.PhotosBlog.Remove(this);
					}
					this._Blog.Entity = value;
					if ((value != null))
					{
						value.PhotosBlog.Add(this);
						this._IdPost = value.Id;
					}
					else
					{
						this._IdPost = default(Nullable<int>);
					}
					this.SendPropertyChanged("Blog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog")]
	public partial class Blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _title;
		
		private System.Nullable<int> _author;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _photo;
		
		private string _content;
		
		private EntitySet<PhotosBlog> _PhotosBlog;
		
		private EntitySet<Comments> _Comments;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnauthorChanging(System.Nullable<int> value);
    partial void OnauthorChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    #endregion
		
		public Blog()
		{
			this._PhotosBlog = new EntitySet<PhotosBlog>(new Action<PhotosBlog>(this.attach_PhotosBlog), new Action<PhotosBlog>(this.detach_PhotosBlog));
			this._Comments = new EntitySet<Comments>(new Action<Comments>(this.attach_Comments), new Action<Comments>(this.detach_Comments));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="Int")]
		public System.Nullable<int> author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="NVarChar(MAX)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_PhotosBlog", Storage="_PhotosBlog", ThisKey="Id", OtherKey="IdPost")]
		public EntitySet<PhotosBlog> PhotosBlog
		{
			get
			{
				return this._PhotosBlog;
			}
			set
			{
				this._PhotosBlog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Comments", Storage="_Comments", ThisKey="Id", OtherKey="IdPost")]
		public EntitySet<Comments> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Blog", Storage="_User", ThisKey="author", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Blog.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Blog.Add(this);
						this._author = value.Id;
					}
					else
					{
						this._author = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhotosBlog(PhotosBlog entity)
		{
			this.SendPropertyChanging();
			entity.Blog = this;
		}
		
		private void detach_PhotosBlog(PhotosBlog entity)
		{
			this.SendPropertyChanging();
			entity.Blog = null;
		}
		
		private void attach_Comments(Comments entity)
		{
			this.SendPropertyChanging();
			entity.Blog = this;
		}
		
		private void detach_Comments(Comments entity)
		{
			this.SendPropertyChanging();
			entity.Blog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _author;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _comment;
		
		private System.Nullable<int> _IdPost;
		
		private EntityRef<User> _User;
		
		private EntityRef<Blog> _Blog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnauthorChanging(System.Nullable<int> value);
    partial void OnauthorChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnIdPostChanging(System.Nullable<int> value);
    partial void OnIdPostChanged();
    #endregion
		
		public Comments()
		{
			this._User = default(EntityRef<User>);
			this._Blog = default(EntityRef<Blog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="Int")]
		public System.Nullable<int> author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPost", DbType="Int")]
		public System.Nullable<int> IdPost
		{
			get
			{
				return this._IdPost;
			}
			set
			{
				if ((this._IdPost != value))
				{
					if (this._Blog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPostChanging(value);
					this.SendPropertyChanging();
					this._IdPost = value;
					this.SendPropertyChanged("IdPost");
					this.OnIdPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comments", Storage="_User", ThisKey="author", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._author = value.Id;
					}
					else
					{
						this._author = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Comments", Storage="_Blog", ThisKey="IdPost", OtherKey="Id", IsForeignKey=true)]
		public Blog Blog
		{
			get
			{
				return this._Blog.Entity;
			}
			set
			{
				Blog previousValue = this._Blog.Entity;
				if (((previousValue != value) 
							|| (this._Blog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Blog.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._IdPost = value.Id;
					}
					else
					{
						this._IdPost = default(Nullable<int>);
					}
					this.SendPropertyChanged("Blog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormSchel")]
	public partial class FormSchel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _idUser;
		
		private string _name;
		
		private string _surname;
		
		private string _phone;
		
		private string _message;
		
		private System.Nullable<int> _idDog;
		
		private EntityRef<User> _User;
		
		private EntityRef<Pieski> _Pieski;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OnidDogChanging(System.Nullable<int> value);
    partial void OnidDogChanged();
    #endregion
		
		public FormSchel()
		{
			this._User = default(EntityRef<User>);
			this._Pieski = default(EntityRef<Pieski>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(50)")]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(MAX)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDog", DbType="Int")]
		public System.Nullable<int> idDog
		{
			get
			{
				return this._idDog;
			}
			set
			{
				if ((this._idDog != value))
				{
					if (this._Pieski.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDogChanging(value);
					this.SendPropertyChanging();
					this._idDog = value;
					this.SendPropertyChanged("idDog");
					this.OnidDogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FormSchel", Storage="_User", ThisKey="idUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FormSchel.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FormSchel.Add(this);
						this._idUser = value.Id;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pieski_FormSchel", Storage="_Pieski", ThisKey="idDog", OtherKey="Id", IsForeignKey=true)]
		public Pieski Pieski
		{
			get
			{
				return this._Pieski.Entity;
			}
			set
			{
				Pieski previousValue = this._Pieski.Entity;
				if (((previousValue != value) 
							|| (this._Pieski.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pieski.Entity = null;
						previousValue.FormSchel.Remove(this);
					}
					this._Pieski.Entity = value;
					if ((value != null))
					{
						value.FormSchel.Add(this);
						this._idDog = value.Id;
					}
					else
					{
						this._idDog = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pieski");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
