@model AdoptujPieska.Models.Pieski

@{
    ViewBag.Title = "Update";
}

<head>
    <style>
        .photoContainer {
            display: inline-block;
            position: relative;
            margin-right: 10px;
            margin-bottom: 10px;
            margin-top: 10px;
        }

        .dogPhoto {
            width: 200px;
            height: auto;
        }

        .removePhoto {
            position: absolute;
            top: 5px;
            right: 5px;
            font-weight: bold;
            font-size: 18px;
            color: red;
            cursor: pointer;
        }

        #newPhotoInput {
            display: block;
            margin-bottom: 10px;
        }

        #opisTextarea {
            width: 100%;
            resize: vertical;
        }

        .btn-edit {
            display: inline-block;
            padding: 8px 13px;
            background-color: #8BC34A;
            color: white;
            text-decoration: none;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 10px;
            margin-right: 0px;
            transition: transform 0.2s ease-in-out;
        }

            .btn-edit:hover {
                transform: scale(1.05);
                color: white;
            }


        .form-group {
            display: flex;
            align-items: center;
            margin-top: 5px;
        }

        .control-label {
            flex-basis: 30%;
            margin-right: 10px;
            margin-top: 10px;
        }

        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            max-width: 500px;
            margin: 0 auto;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
            color: #555;
        }

        input[type="text"],
        input[type="number"],
        select {
            padding: 8px;
            border-radius: 5px;
            border: none;
            margin-bottom: 20px;
            box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
            width: 100%;
        }

        input[type="radio"],
        input[type="checkbox"] {
            margin-right: 10px;
        }

        input[type="file"] {
            margin-bottom: 20px;
        }

        input[type="submit"] {
            background-color: #4CAF50;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
        }

            input[type="submit"]:hover {
                background-color: #3e8e41;
            }

        .editPhotosLabel {
            font-weight: bold;
            margin-right: 20px;
        }
    </style>


    <script>
        function removePhoto(photoId, element) {

            var photoContainer = element.parentNode;
            photoContainer.parentNode.removeChild(photoContainer);

            $.ajax({
                url: '/Pieski/RemovePhoto',
                type: 'POST',
                data: { id: photoId },
                success: function (result) {
                },
                error: function (xhr, status, error) {
                }
            });
        }


    </script>


</head>


<form action="Add" method="POST" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <h3>Zaktualizuj profil pieska</h3>
    <div class="container">
        <div class="form-horizontal"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Rasa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rasa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rasa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Imie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Imie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Imie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Wiek, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Wiek, new { htmlAttributes = new { @class = "form-control", min = 1 } })
                @Html.ValidationMessageFor(model => model.Wiek, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plec, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Plec, new SelectList(new[]
                {
                    new SelectListItem { Text = "Samiec", Value = "false" },
                    new SelectListItem { Text = "Samica", Value = "true" }
                }, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Plec, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Aktywny, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Aktywny, new SelectList(new[]
                {
                    new SelectListItem { Text = "Nie", Value = "false" },
                    new SelectListItem { Text = "Tak", Value = "true" }
                }, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Aktywny, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lubi_dzieci, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Lubi_dzieci, new SelectList(new[]
                {
                    new SelectListItem { Text = "Nie", Value = "false" },
                    new SelectListItem { Text = "Tak", Value = "true" }
                }, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Lubi_dzieci, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lubi_psy, "Czy lubi psy?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Lubi_psy, new SelectList(new[]
                {
                    new SelectListItem { Text = "Nie", Value = "false" },
                    new SelectListItem { Text = "Tak", Value = "true" }
                }, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Lubi_psy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label" })
            <div>
                <textarea id="opisTextarea" rows="8" class="form-control">@Model.Opis</textarea>
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="editPhotosLabel">Edytuj zdjęcie profilowe:</span>
            @using (Html.BeginForm("Photos", "Pieski", new { id = Model.Id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="file" name="file" />

            }
        </div>

        <div class="form-group">
            <span class="editPhotosLabel">Usuń zdjęcia:</span>
            <div id="dogPhotos">

                @foreach (var photo in Model.Photo)
                {
                    <div class="photoContainer">
                        <img src="@photo.Photos" alt="Zdjęcie psa" class="dogPhoto" />
                        <span class="removePhoto" onclick="removePhoto('@photo.Id', this)">X</span>
                    </div>
                }
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 d-flex justify-content-center text-center">
                <div>
                    <input type="submit" value="Zapisz" class="btn-edit" />
                </div>
            </div>
        </div>




    </div>
</form>

